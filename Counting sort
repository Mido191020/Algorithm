void count_sort(){
    vector<int> arr = {10, 9, 8, 7, 6, 5, 4, 3};
    int n = arr.size();
    auto max_ptr = max_element(arr.begin(), arr.end());
    int max_val = *max_ptr;
    vector<int>arr2(max_val+1,0);
    for (int i = 0; i < n; ++i) {
        arr2[arr[i]]++;
    }
    for (int i = 0; i < max_val; i++) {
        while (arr2[i]>0){
            cout<<i<<" ";
            arr2[i]--;
        }
    }
    cout<<endl;

}
//////////////////////////////////////////////////////////////////////////////////////////////
vector<int> sortArray(vector<int>& nums) {
int n=nums.size();
int maxVal=nums[0],mnVal=nums[0];
    for (int i = 1; i <n; i++) {
        if (nums[i]>maxVal)
            maxVal=nums[i];
        if (nums[i]<mnVal)mnVal=nums[i];
    }
    int new_max=maxVal-mnVal;
    vector<int>count(new_max+1);
    for (int i = 0; i < n; i++) {
        count[nums[i]-mnVal]+=1;
    }
    int index=0;
    for (int i = 0; i <= new_max; i++) {
        for (int j = 0; j < count[i]; ++j,++index) {
            nums[index]=i+mnVal;
        }
    }
    return nums;
}
